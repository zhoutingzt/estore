<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
<!-- 
 applicationContext_dao.xml 主要整合mybatis 不包括
 为了后期维护也是为了单一职能原则
 什么时候用注解 什么时候用xml
 如果是自己写的代码就是用注解 如果是配置第三方jar，那么就需要xml配置
 -->
<!-- 配置自动扫描注解 -->
<context:component-scan base-package="com.briup.ssm.dao"></context:component-scan>
<!-- 导入外部properties文件 -->
 <context:property-placeholder location="classpath:dataSource.properties"/>
 <!-- 配置连接池 -->
 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
   <!-- 通过set方法注入值 -->
   <property name="driverClassName" value="${driver}"></property>
	<property name="url" value="${url}"></property>
	<property name="username" value="${user}"></property>
	<property name="password" value="${password}"></property>
 </bean>
<!-- 配置sqlSessionFactoryBean
        
		sqlSessionFactoryBean
		配置mybatis的一些相关信息
		比如说：
			mybatis操作数据库的信息
			mybatis的映射文件
			mybatis分页信息
			mybatis起别名		
	 -->
  <!-- spring和MyBatis完美整合 -->
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
  <property name="dataSource" ref="dataSource"></property>
  <!-- 配置映射文件的位置  用 <property name="configLocation" value="classpath:mybatis-config.xml"/>-->
  <property name="mapperLocations" value="classpath:com/briup/ssm/dao/*Mapper.xml"></property>
  <!-- <property name="typeAliase" --> <!-- 这里可以配置注解 -->
  
  <!-- mybatis分页插件 pagehelper -->
<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=oracle<!-- 可以写成mysql 那么就用mysql的jar -->
						</value>
					</property>
				</bean>
			</array>
</property>
</bean>	


<!-- 配置映射接口扫描 自动扫描包下的所有dao接口，并实现这些接口，
   可直接在程序中使用dao接口，不用再获取sqlsession对象      
 -->
 <!--
		mapperScannerConfigurer
		 映射扫描接口
		 是为了告诉spring容器mybatis的映射接口在什么包底下
		 然后spring容器才能给映射接口动态的产生一个代理实现类
	 -->
<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  <!--  basePackage 属性是映射器接口文件的包路径。
                 你可以使用分号或逗号 作为分隔符设置多于一个的包路径 -->
  <property name="basePackage" value="com.briup.ssm.dao"></property>
</bean>

</beans>